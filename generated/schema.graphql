### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


scalar DateTime

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

enum OrderByArg {
  asc
  desc
}

type Post {
  author: User
  content: String
  createdAt: DateTime!
  draft: Boolean!
  excerpt: String
  id: Int!
  slug: String!
  title: String!
  updatedAt: DateTime!
}

input PostWhereUniqueInput {
  id: Int
  title: String
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: QueryPostsOrderByInput, skip: Int, where: QueryPostsWhereInput): [Post!]!
  user(where: UserWhereUniqueInput!): User
}

input QueryPostsOrderByInput {
  updatedAt: OrderByArg
}

input QueryPostsWhereInput {
  authorId: NullableIntFilter
  content: NullableStringFilter
  title: StringFilter
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  email: String!
  id: Int!
  name: String
  postCount: Int!
  posts: [Post!]!
}

input UserWhereUniqueInput {
  email: String
  id: Int
  name: String
}
